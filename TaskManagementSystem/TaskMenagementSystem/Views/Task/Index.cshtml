@using Domain.Entities

@model IEnumerable<Domain.Entities.Task>

@{
    ViewBag.Title = "Index";
}

<h3 style="font-weight:600">Tasks for <span style="color:cornflowerblue; font-weight:700">@ViewBag.ProjectName</span> </h3>

<p>
   <button class="btn btn-link" id="createTask">Create New</button>
</p>
<hr />

<div id="addTask">
    <form id="taskForm" title="Create New Task">
        @Html.AntiForgeryToken()
        <br />
        <br />
        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-2">Name</label>
                <div class="col-md-10">
                    <input type="text" class="form-control" id="name" name="name" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Description</label>
                <div class="col-md-10">
                    <input type="text" class="form-control" id="description" name="description" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">EstimatedHours</label>
                <div class="col-md-10">
                    <input type="text" class="form-control" id="estimatedHours" name="estimatedHours" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">EndDateTime</label>
                <div class="col-md-10">
                    <input type="text" class="form-control" id="endDateTime" name="endDateTime" />
                </div>
            </div>

            <div class="form-group">          
                <label class="control-label col-md-2">Type</label>
                <div class="col-md-10">
                    <select class="form-control" id="type">
                        @foreach (TaskType type in Enum.GetValues(typeof(TaskType)))
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Status</label>
                <div class="col-md-10">
                    <select class="form-control" id="status">
                        @foreach (TaskStatus status in Enum.GetValues(typeof(TaskStatus)))
                        {
                            <option value="@status">@status</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">UserId</label>
                <div class="col-md-10">
                   @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">ProjectId</label>
                <div class="col-md-10">
                    <input type="text" id="ProjectId" class="form-control" value="@ViewBag.ProjectId" readonly/>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">IsActive</label>
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.CheckBox("IsActive")
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>



<div class="row ui-widget ui-helper-clearfix">
    @foreach (TaskStatus status in Enum.GetValues(typeof(TaskStatus)))
    {
        <ul id="@status" style="border: 1px solid #eee; width: 250px; min-height: 20px; list-style-type: none; margin: 0; padding: 2% 0 0 0; float: left; margin-right: 10px; border-radius:5px">
            <li style="font-size: 2em; margin-top: -10px"><b>@status</b></li>
            @foreach (var item in Model)
            {
                if (item.Status == status)
                {
                    <li class="ui-state-highlight" id="@item.ID" style="margin: 0 5px 5px 5px; padding: 5px; font-size: 1.2em; width: 238px; border-radius:5px">
                         @*@Html.DisplayFor(modelItem => item.Name)*@
                        <ul style="list-style-type: none">
                            <li id="itemId" hidden>@item.ID</li>
                            <li><b>Name:</b>  @item.Name</li>
                            <li><b>Type:</b>  @item.Type</li>
                            <li><b>Status:</b>  @item.Status</li>
                            <li><b>Description:</b>  @item.Description</li>
                            <li><button id="@item.ID" class="btn btn-info btn-xs">More...</button></li>
                        </ul>
                    </li>
                }
            }
        </ul>
    }
</div>

<div id="taskDetails">
    <form id="detailsTaskForm" title="Create New Task">
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-6">Name</label>
                <div class="col-md-6">
                    <label class="control-label" id="nameDetails"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-6">Description</label>
                <div class="col-md-6">
                    <label class="control-label" id="descriptionDetails"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-6">EstimatedHours</label>
                <div class="col-md-6">
                    <label class="control-label" id="estimatedHoursDetails"></label>
                </div>
            </div>
            
            <div class="form-group">
                <label class="control-label col-md-6">StartDateTime</label>
                <div class="col-md-6">
                    <label class="control-label" id="dateCreaterDetails"></label>
                </div>
            </div>
            
            <div class="form-group">
                <label class="control-label col-md-6">StartDateTime</label>
                <div class="col-md-6">
                    <label class="control-label" id="startDateTimeDetails"></label>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-6">EndDateTime</label>
                <div class="col-md-6">
                    <label class="control-label" id="endDateTimeDetails"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-6">Type</label>
                <div class="col-md-6">
                        <label class="control-label" id="typeDetails"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-6">Status</label>
                <div class="col-md-6">
                    <label class="control-label" id="statusDetails"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-6">UserId</label>
                <div class="col-md-6">
                    <label class="control-label" id="userDetails"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-6">ProjectId</label>
                <div class="col-md-6">
                    <label class="control-label" id="projectDetails"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-6">IsActive</label>
                <div class="col-md-6">
                    <label class="control-label" id="isActiveDetails"></label>
                </div>
            </div>
        </div>
    </form>
</div>


@section scripts{
    <script type="text/javascript">
        $(function() {
            $("#ToDo").sortable({
                connectWith: "#InProgress, #InTesting",
                receive: function (event, ui) {
                    $.ajax({
                        type: "POST",
                        url: "/Task/UpdateTask",
                        data: {
                            id: ui.item[0.].id,
                            status: "ToDo"
                        },
                        success : function (data) {
                            debugger;
                            window.location.reload();
                        },
                        error: function () {
                            alert("error")
                        }
                    });
                   
                    //$('#ToDo').sortable("refresh");
                }
            })
            $("#InProgress").sortable({
                connectWith: "#ToDo, #InTesting, #Done",
                helper: "InProgress",
                receive: function (event, ui) {
                    $.ajax({
                        type: "POST",
                        url : "/Task/UpdateTask",
                        data: {
                            id: ui.item[0.].id,
                            status: "InProgress"
                        },
                        success: function (data) {
                            debugger;
                            window.location.reload();
                        },
                        error: function () {
                            alert("error")
                        }
                    });
                   
                    //$('#InProgress').sortable("refresh");
                }
            })
            $("#InTesting").sortable({
                connectWith: "#ToDo, #Done",
                receive: function (event, ui) {
                    $.ajax({
                        type: "POST",
                        url: "/Task/UpdateTask",
                        data: {
                            id: ui.item[0.].id,
                            status: "InTesting"
                        },
                        success: function (data) {
                            debugger;
                            console.log(data);
                            window.location.reload();
                        },
                        error: function () {
                            alert("error")
                        }
                    });
                    
                    // $('#InTesting').sortable("refresh");
                },

            });
            $("#Done").sortable({
                connectWith: "#InProgress, #InTesting",
                receive: function (event, ui) {
                    $.ajax({
                        type: "POST",
                        url: "/Task/UpdateTask",
                        data: {
                            id: ui.item[0.].id,
                            status: "Done"
                        },
                        success: function (data) {
                            window.location.reload();
                        },
                        error: function () {
                            alert("error")
                        }
                    });
                }
            });

            $("#taskForm").dialog({
                autoOpen: false,
                width: 800,
                height: 550,
                modal: true,
                close: function (event, ui) {
                    location.reload(false);
                },
                buttons:
                {
                    "Add": function () {
                        var type= $("#type").val();
                        var status = $("#status").val();
                        var isActive = $("#IsActive").is(':checked');
                        var task = {
                            Name: $("#name").val(),
                            Description: $("#description").val(),
                            EstimatedHours: $("#estimatedHours").val(),
                            EndDateTime: $("#endDateTime").val(),
                            TaskType: type,
                            TaskStatus: status,
                            UserId: $("#UserId").val(),
                            ProjectId: $("#ProjectId").val(),
                            IsActive: isActive
                        }
                        $.ajax({
                            type: "POST", //HTTP POST Method  
                            url: "/Task/Create", // Controller/View   
                            data:  //task,//$("#taskForm").serialize(),
                                {
                                    Name: $("#name").val(),
                                    Description: $("#description").val(),
                                    EstimatedHours: $("#estimatedHours").val(),
                                    EndDateTime: $("#endDateTime").val(),
                                    TaskType: type,
                                    TaskStatus: status,
                                    UserId: $("#UserId").val(),
                                    ProjectId: $("#ProjectId").val(),
                                    IsActive: isActive
                                },
                        success: function (status) {
                            // alert("done");
                            $("#taskForm").dialog("close");
                        },
                        error: function () {
                            // alert("fail");
                            $("#taskForm").dialog("close");
                        }
                        });
                    },
                    "Cancel": function () {
                        //cancel
                        $("#taskForm").dialog("close");
                    }
                }
            });
        
            $("#createTask").click(function (event) {
                event.preventDefault();
                $("#taskForm").dialog("open");
            });

            $("#detailsTaskForm").dialog({
                autoOpen: false,
                width: 600,
                height: 550,
                modal: true,
                close: function (event, ui) {
                    location.reload(false);
                },
                buttons:
                {
                    "Cancel": function () {
                        //cancel
                        $("#detailsTaskForm").dialog("close");
                    }
                }
            });

            $(".btn-info").click(function (event) {
                event.preventDefault();
                var projectId = event.currentTarget.id;

                $.ajax({
                    type: "GET", //HTTP POST Method  
                    url: "/Task/Details?", // Controller/View   
                    data: { "id": projectId },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (values) {
                        $("#nameDetails").text(values.name);
                        $("#descriptionDetails").text(values.description);
                        $("#estimatedHoursDetails").text(values.estimateHours);
                        $("#dateCreaterDetails").text(values.dateCreated);
                        $("#startDateTimeDetails").text(values.startTime);
                        $("#endDateTimeDetails").text(values.endTime);
                        $("#typeDetails").text(values.type);
                        $("#statusDetails").text(values.status);
                        $("#userDetails").text(values.user);
                        $("#projectDetails").text(values.project);
                        $("#isActiveDetails").text(values.isActive);
                         //alert("done");
                    },
                    error: function () {
                         alert("fail");
                    }
                });
                $("#detailsTaskForm").dialog("open");
            });
        });
  </script>
}