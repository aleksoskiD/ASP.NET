@model IEnumerable<HotelApp.Domain.Entities.ViewModels.ReservationViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-11 reservation">
    <h2>My Reservations</h2>
    <p>
        @Html.ActionLink("Create New", "CreateReservation", null, new { @class = "btn btn-success"})
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoomType)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                @switch (item.Status)
                {
                    case HotelApp.Domain.Entities.BookingStatus.approved:
                        <td style="color: green; font-weight:700">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        break;
                    case HotelApp.Domain.Entities.BookingStatus.notApproved:
                        <td style="color:red; font-weight:700">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        break;
                    case HotelApp.Domain.Entities.BookingStatus.pending:
                        <td style="color:royalblue; font-weight:700">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        break;
                    case HotelApp.Domain.Entities.BookingStatus.cancelled:
                        <td style="color:black; font-weight:700">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        break;
                }
                <td>
                    @Html.DisplayFor(modelItem => item.RoomType)
                </td>
                @if (item.Status != HotelApp.Domain.Entities.BookingStatus.cancelled && item.Status != HotelApp.Domain.Entities.BookingStatus.notApproved)
                {
                    <td>
                        <button class="btn btn-danger btn-sm cancelReservation" id="@item.ID">Cancel</button>
                    </td>
                }
            </tr>
        }

    </table>
</div>
