@model IEnumerable<HotelApp.Domain.Entities.Room>
@using HotelApp.Domain.Entities
@{
    ViewBag.Title = "Rooms";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1 class="page-header">Rooms</h1>
<ol class="breadcrumb">
    <li class="active">
        <i class="fa fa-dashboard"></i><a href="~/Admin"> Dashboard</a>&nbsp / &nbsp <i class="fa fa-bed"></i> Rooms
    </li>
</ol>

    <button id="createRoom" class="btn btn-link createRoom">Create Room</button>
@* da se napraj za sortiranje *@
<div class="dropdown" style="display:inline">
    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-toggle="dropdown">
        Filter  &nbsp  &nbsp
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" style="background-color:azure"> 
        <li>@Html.ActionLink("-- -- -- -- --", "Rooms", "Admin", new { id = ViewContext.RouteData.Values["id"]}, null)</li>
        <li>@Html.ActionLink("Free rooms", "Rooms", "Admin", new { id = ViewContext.RouteData.Values["id"], sort = "free" }, null)</li>    
        <li>@Html.ActionLink("Reserved rooms", "Rooms", "Admin", new { id = ViewContext.RouteData.Values["id"], sort = "reserved" }, null)</li>
        <li>@Html.ActionLink("Active rooms", "Rooms", "Admin", new { id = ViewContext.RouteData.Values["id"], sort = "active" }, null)</li>
        <li>@Html.ActionLink("Inactive rooms", "Rooms", "Admin", new { id = ViewContext.RouteData.Values["id"], sort = "inactive" }, null)</li>
    </ul>
</div>
<table class="table table-hover" style="margin-top:10px">
    <tr>
        <th>@Html.DisplayNameFor(model => model.Floor.FloorNo)</th>
        <th>RoomID</th>
        <th>@Html.DisplayNameFor(model => model.RoomType)</th>
        <th>@Html.DisplayNameFor(model => model.IsActive)</th>
        <th>@Html.DisplayNameFor(model => model.IsReserved)</th>
        <th>@Html.DisplayNameFor(model => model.Description)</th>
        <th>Actions</th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td style="display:none">
            @Html.DisplayFor(modelItem => item.Floor.ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Floor.FloorNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RoomType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsActive)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsReserved)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
       @if (item.IsReserved == false)
       {
        <td>
            <button class="btn btn-link editRoom" id="@item.ID">Edit</button>
            @if (item.IsActive == true)
            {
                <button class="btn btn-link deactivateRoom" id="@item.ID">Deactivate</button>
            }
            else
            {
                <button class="btn btn-link activateRoom" id="@item.ID">Activate</button>
            }
        </td>
       }
       else
       {
        <td>
            <button class="btn btn-link editRoom" id="@item.ID" disabled="disabled">Edit</button>
            @if (item.IsActive == true)
            {
                <button class="btn btn-link deactivateRoom" id="@item.ID" disabled="disabled">Deactivate</button>
            }
            else
            {
                <button class="btn btn-link activateRoom" id="@item.ID" disabled="disabled">Activate</button>
            }
        </td>
       }
       
    </tr>
}

</table>


<div id="editRoom">
    <form id="roomFormEdit" title="Edit Room">
        @Html.AntiForgeryToken()
        <br />
        <br />
        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-5">Room Id</label>
                <div class="col-md-5">
                    <input type="text" class="form-control" id="roomIdEdit" name="roomIdEdit" readonly/>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-5">Room Type</label>
                <div class="col-md-5">
                    <select class="form-control" id="roomTypeEdit">
                        @foreach (RoomType type in Enum.GetValues(typeof(RoomType)))
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-5">Active</label>
                <div class="col-md-5">
                    <div class="checkbox">
                        @Html.CheckBox("IsActiveRoomEdit")
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-5">Reserved</label>
                <div class="col-md-5">
                    <div class="checkbox">
                        @Html.CheckBox("IsReservedRoomEdit")
                    </div>
                </div>
            </div>
            <div class="form-group" style="display:none">
                <label class="control-label col-md-5">FloorID</label>
                <div class="col-md-5">
                    @Html.DropDownList("FloorId", null, htmlAttributes: new { @class = "form-control editFloorId"})
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-5">Description</label>
                <div class="col-md-5">
                    <textarea rows="3" class="form-control" id="roomDescriptionEdit"></textarea>
                </div>
            </div>
        </div>
    </form>
</div>
