@model IEnumerable<HotelApp.Domain.Entities.ViewModels.ReservationViewModel>

@{
    ViewBag.Title = "Reservations";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1 class="page-header">Reservations</h1>
<ol class="breadcrumb">
    <li class="active">
        <i class="fa fa-dashboard"></i><a href="~/Admin"> Dashboard</a>&nbsp /&nbsp <i class="fa fa-edit"></i> Reservations
    </li>
</ol>

<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateCreated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GuestName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GuestName)
            </td>
            @switch (item.Status)
                {
                    case HotelApp.Domain.Entities.BookingStatus.approved:
                    <td style="color: green; font-weight:700">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    break;
                case HotelApp.Domain.Entities.BookingStatus.notApproved:
                    <td style="color:red; font-weight:700">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    break;
                case HotelApp.Domain.Entities.BookingStatus.pending:
                    <td style="color:royalblue; font-weight:700">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    break;
                case HotelApp.Domain.Entities.BookingStatus.cancelled:
                    <td style="color:black; font-weight:700">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    break;
            }

            @switch (item.Status)
                {
                    case HotelApp.Domain.Entities.BookingStatus.approved:
                    <td style="color: green; font-weight:700">
                        <button class="btn btn-danger btn-sm" id="@item.ID">Delete</button>
                    </td>
                    break;
                case HotelApp.Domain.Entities.BookingStatus.notApproved:
                    <td style="color:red; font-weight:700">
                    </td>
                    break;
                case HotelApp.Domain.Entities.BookingStatus.pending:
                    <td style="color:royalblue; font-weight:700">
                        <button class="btn btn-success btn-sm" id="@item.ID">Confirm</button>
                    </td>
                    break;
                case HotelApp.Domain.Entities.BookingStatus.cancelled:
                    <td style="color:black; font-weight:700">
                    </td>
                    break;
            }
        </tr>
    }
</table>
